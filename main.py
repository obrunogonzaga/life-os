#!/usr/bin/env python3
import os
import sys
from typing import List
from datetime import datetime
from rich.console import Console
from rich.table import Table
from rich.panel import Panel
from rich.prompt import Prompt, IntPrompt
from rich import box
from utils.config_manager import ConfigManager
from utils.news_aggregator import NewsAggregator
from scrapers.tabnews_scraper import Artigo


console = Console()


class WidiaNews:
    def __init__(self):
        self.config_manager = ConfigManager()
        self.news_aggregator = NewsAggregator(self.config_manager)
        self.running = True
    
    def clear_screen(self):
        os.system('clear' if os.name == 'posix' else 'cls')
    
    def show_header(self):
        console.print(Panel.fit(
            "[bold cyan]üóûÔ∏è  WIDIA NEWS[/bold cyan]\n"
            "[dim]Seu agregador de not√≠cias tech[/dim]",
            border_style="bright_blue"
        ))
        console.print()
    
    def show_menu(self):
        table = Table(show_header=False, box=box.ROUNDED)
        table.add_column("Op√ß√£o", style="cyan", width=12)
        table.add_column("Descri√ß√£o", style="white")
        
        table.add_row("1", "üì∞ √öltimas not√≠cias")
        table.add_row("2", "‚ûï Adicionar site")
        table.add_row("3", "‚ûñ Remover site")
        table.add_row("4", "üìã Listar sites ativos")
        table.add_row("5", "üîÑ Atualizar not√≠cias")
        table.add_row("0", "‚ùå Sair")
        
        console.print(table)
        console.print()
    
    def show_latest_news(self):
        self.clear_screen()
        self.show_header()
        
        console.print("[bold yellow]üì∞ Carregando √∫ltimas not√≠cias...[/bold yellow]\n")
        
        try:
            articles = self.news_aggregator.get_all_news()
            
            if not articles:
                console.print("[red]Nenhuma not√≠cia encontrada![/red]")
                console.print("[dim]Verifique se h√° sites ativos ou tente atualizar.[/dim]")
            else:
                # Ordenar por mais recente (voc√™ pode implementar uma l√≥gica melhor depois)
                console.print(f"[green]Encontradas {len(articles)} not√≠cias[/green]\n")
                
                for i, article in enumerate(articles[:20], 1):  # Limitar a 20 not√≠cias
                    # Criar um painel para cada not√≠cia
                    content = f"[bold]{article.titulo}[/bold]\n"
                    content += f"[dim]Por {article.autor} ‚Ä¢ {article.tempo_postagem} ‚Ä¢ {article.origem}[/dim]\n"
                    content += f"[cyan]üí¨ {article.comentarios} coment√°rios[/cyan]"
                    
                    console.print(Panel(
                        content,
                        title=f"[{i}]",
                        title_align="left",
                        padding=(0, 1),
                        border_style="blue"
                    ))
                
                console.print("\n[dim]Mostrando as 20 not√≠cias mais recentes[/dim]")
        
        except Exception as e:
            console.print(f"[red]Erro ao carregar not√≠cias: {e}[/red]")
        
        console.print("\n[dim]Pressione Enter para voltar ao menu...[/dim]")
        input()
    
    def add_site(self):
        self.clear_screen()
        self.show_header()
        
        console.print("[bold yellow]‚ûï Adicionar novo site[/bold yellow]\n")
        
        # Mostrar sites dispon√≠veis
        available = self.config_manager.get_available_sites()
        active = self.config_manager.get_active_sites()
        
        console.print("[bold]Sites dispon√≠veis:[/bold]")
        for site in available:
            status = "[green]‚úì Ativo[/green]" if site in active else "[dim]‚óã Inativo[/dim]"
            console.print(f"  ‚Ä¢ {site} {status}")
        
        console.print("\n[dim]Digite o nome do site ou 'cancelar' para voltar[/dim]")
        site_name = Prompt.ask("\nSite")
        
        if site_name.lower() != 'cancelar':
            if self.config_manager.add_site(site_name):
                console.print(f"\n[green]‚úì Site '{site_name}' adicionado com sucesso![/green]")
            else:
                console.print(f"\n[red]‚úó Erro ao adicionar site '{site_name}'[/red]")
        
        console.print("\n[dim]Pressione Enter para continuar...[/dim]")
        input()
    
    def remove_site(self):
        self.clear_screen()
        self.show_header()
        
        console.print("[bold yellow]‚ûñ Remover site[/bold yellow]\n")
        
        active_sites = self.config_manager.get_active_sites()
        
        if not active_sites:
            console.print("[red]Nenhum site ativo para remover![/red]")
        else:
            console.print("[bold]Sites ativos:[/bold]")
            for i, site in enumerate(active_sites, 1):
                console.print(f"  {i}. {site}")
            
            console.print("\n[dim]Digite o n√∫mero do site ou 0 para cancelar[/dim]")
            choice = IntPrompt.ask("\nEscolha", default=0)
            
            if 0 < choice <= len(active_sites):
                site_name = active_sites[choice - 1]
                if self.config_manager.remove_site(site_name):
                    console.print(f"\n[green]‚úì Site '{site_name}' removido com sucesso![/green]")
                else:
                    console.print(f"\n[red]‚úó Erro ao remover site '{site_name}'[/red]")
        
        console.print("\n[dim]Pressione Enter para continuar...[/dim]")
        input()
    
    def list_sites(self):
        self.clear_screen()
        self.show_header()
        
        console.print("[bold yellow]üìã Sites configurados[/bold yellow]\n")
        
        active_sites = self.config_manager.get_active_sites()
        
        if not active_sites:
            console.print("[dim]Nenhum site ativo no momento.[/dim]")
        else:
            table = Table(title="Sites Ativos", box=box.ROUNDED)
            table.add_column("Site", style="cyan")
            table.add_column("Status", style="green")
            
            for site in active_sites:
                table.add_row(site, "‚úì Ativo")
            
            console.print(table)
        
        console.print("\n[dim]Pressione Enter para continuar...[/dim]")
        input()
    
    def update_news(self):
        self.clear_screen()
        self.show_header()
        
        console.print("[bold yellow]üîÑ Atualizando not√≠cias...[/bold yellow]\n")
        
        active_sites = self.config_manager.get_active_sites()
        
        if not active_sites:
            console.print("[red]Nenhum site ativo para atualizar![/red]")
        else:
            for site in active_sites:
                console.print(f"[dim]Atualizando {site}...[/dim]")
                # Aqui voc√™ pode adicionar l√≥gica de cache/atualiza√ß√£o for√ßada
            
            console.print(f"\n[green]‚úì Atualiza√ß√£o conclu√≠da![/green]")
        
        console.print("\n[dim]Pressione Enter para continuar...[/dim]")
        input()
    
    def run(self):
        while self.running:
            self.clear_screen()
            self.show_header()
            self.show_menu()
            
            choice = Prompt.ask("Escolha uma op√ß√£o", default="1")
            
            if choice == "1":
                self.show_latest_news()
            elif choice == "2":
                self.add_site()
            elif choice == "3":
                self.remove_site()
            elif choice == "4":
                self.list_sites()
            elif choice == "5":
                self.update_news()
            elif choice == "0":
                self.running = False
                console.print("\n[bold green]At√© logo! üëã[/bold green]")
            else:
                console.print("\n[red]Op√ß√£o inv√°lida![/red]")
                console.print("[dim]Pressione Enter para continuar...[/dim]")
                input()


if __name__ == "__main__":
    try:
        app = WidiaNews()
        app.run()
    except KeyboardInterrupt:
        console.print("\n\n[bold red]Programa interrompido pelo usu√°rio[/bold red]")
        sys.exit(0)